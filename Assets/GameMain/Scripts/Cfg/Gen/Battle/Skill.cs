//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using Bright.Serialization;
using System.Collections.Generic;



namespace Cfg.Battle
{

public sealed partial class Skill :  Bright.Config.BeanBase 
{
    public Skill(ByteBuf _buf) 
    {
        Id = _buf.ReadInt();
        Name = _buf.ReadString();
        Desc = _buf.ReadString();
        SkillType = (Battle.SkillType)_buf.ReadInt();
        EffectType = (Battle.EffectType)_buf.ReadInt();
        MpCost = _buf.ReadInt();
        ReleaseRange = _buf.ReadInt();
        Power = _buf.ReadInt();
        HitRate = _buf.ReadFloat();
        PostInit();
    }

    public static Skill DeserializeSkill(ByteBuf _buf)
    {
        return new Battle.Skill(_buf);
    }

    /// <summary>
    /// 编号
    /// </summary>
    public int Id { get; private set; }
    /// <summary>
    /// 技能名
    /// </summary>
    public string Name { get; private set; }
    /// <summary>
    /// 描述
    /// </summary>
    public string Desc { get; private set; }
    /// <summary>
    /// 技能类型
    /// </summary>
    public Battle.SkillType SkillType { get; private set; }
    /// <summary>
    /// 效果类型
    /// </summary>
    public Battle.EffectType EffectType { get; private set; }
    /// <summary>
    /// MP消耗
    /// </summary>
    public int MpCost { get; private set; }
    /// <summary>
    /// 释放范围
    /// </summary>
    public int ReleaseRange { get; private set; }
    /// <summary>
    /// 威力
    /// </summary>
    public int Power { get; private set; }
    /// <summary>
    /// 命中率
    /// </summary>
    public float HitRate { get; private set; }

    public const int __ID__ = 1272250779;
    public override int GetTypeId() => __ID__;

    public  void Resolve(Dictionary<string, object> _tables)
    {
        PostResolve();
    }

    public  void TranslateText(System.Func<string, string, string> translator)
    {
    }

    public override string ToString()
    {
        return "{ "
        + "Id:" + Id + ","
        + "Name:" + Name + ","
        + "Desc:" + Desc + ","
        + "SkillType:" + SkillType + ","
        + "EffectType:" + EffectType + ","
        + "MpCost:" + MpCost + ","
        + "ReleaseRange:" + ReleaseRange + ","
        + "Power:" + Power + ","
        + "HitRate:" + HitRate + ","
        + "}";
    }
    
    partial void PostInit();
    partial void PostResolve();
}

}
